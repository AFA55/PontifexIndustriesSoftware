// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/dashboard" | "/dashboard/admin" | "/dashboard/admin/create-estimate" | "/dashboard/admin/project-status-board" | "/dashboard/admin/upcoming-projects" | "/dashboard/job-schedule" | "/dashboard/job-schedule/[id]" | "/dashboard/job-schedule/[id]/equipment-checklist" | "/dashboard/job-schedule/[id]/silica-exposure" | "/dashboard/job-schedule/[id]/work-performed" | "/dashboard/tools" | "/dashboard/tools/add-equipment" | "/dashboard/tools/debug" | "/dashboard/tools/my-equipment" | "/dashboard/tools/scan" | "/login"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/dashboard": {}
  "/dashboard/admin": {}
  "/dashboard/admin/create-estimate": {}
  "/dashboard/admin/project-status-board": {}
  "/dashboard/admin/upcoming-projects": {}
  "/dashboard/job-schedule": {}
  "/dashboard/job-schedule/[id]": { "id": string; }
  "/dashboard/job-schedule/[id]/equipment-checklist": { "id": string; }
  "/dashboard/job-schedule/[id]/silica-exposure": { "id": string; }
  "/dashboard/job-schedule/[id]/work-performed": { "id": string; }
  "/dashboard/tools": {}
  "/dashboard/tools/add-equipment": {}
  "/dashboard/tools/debug": {}
  "/dashboard/tools/my-equipment": {}
  "/dashboard/tools/scan": {}
  "/login": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
